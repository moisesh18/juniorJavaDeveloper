package Semestre3;


/**
 * Write a description of class Laberinto1 here.
 * 
 * @author (your name) 
 * @version (a version number or a date)
 */

import java.util.Stack;

public class Laberinto2
{
    public static void main (String [] args){    
        char [][] laberinto1 = {{'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x'},
                        {'x', '-', '-', '-', 'x', '-', '-', '-', '-', 'x', '-', '-', '-', 'x', '-', '-', '-', '-', '-', 'x'},
                        {'x', '-', 'x', '-', '-', 'x', '-', '-', '-', 'x', 'x', 'x', 'x', '-', '-', 'x', '-', 'x', '-', 'x'},
                        {'x', '-', 'x', '-', 'x', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'x', '-', 'x', 'x', '-', 'x'},
                        {'x', '-', 'x', '-', '-', '-', '-', '-', 'x', '-', 'x', 'x', '-', '-', 'x', '-', '-', '-', '-', 'x'},
                        {'x', '-', 'x', 'x', 'x', '-', '-', '-', '-', '-', 'x', '-', '-', '-', 'x', '-', '-', '-', '-', '-'},
                        {'x', '-', 'x', '-', 'x', '-', '-', '-', '-', 'x', 'x', '-', '-', '-', 'x', '-', '-', 'x', 'x', 'x'},
                        {'x', '-', 'x', '-', 'x', 'x', '-', '-', '-', '-', 'x', 'x', '-', '-', 'x', '-', '-', '-', '-', 'x'},
                        {'x', '-', '-', '-', 'x', 'x', '-', '-', '-', '-', 'x', '-', '-', '-', 'x', '-', 'x', 'x', 'x', 'x'},
                        {'x', '-', 'x', 'x', '-', '-', '-', '-', '-', '-', 'x', '-', 'x', 'x', 'x', '-', 'x', '-', 'x', 'x'},
                        {'x', '-', 'x', 'x', '-', 'x', '-', '-', 'x', '-', 'x', '-', '-', '-', '-', '-', 'x', 'x', 'x', 'x'},
                        {'x', '-', 'x', '-', 'x', '-', '-', '-', '-', '-', 'x', '-', '-', 'x', '-', '-', 'x', '-', '-', 'x'},
                        {'x', '-', 'x', '-', '-', 'x', '-', '-', '-', 'x', 'x', '-', 'x', '-', 'x', '-', '-', 'x', 'x', 'x'},
                        {'x', '-', '-', '-', '-', '-', 'x', '-', '-', '-', 'x', '-', '-', '-', 'x', '-', '-', '-', 'x', 'x'},
                        {'-', '-', '-', 'x', '-', '-', '-', 'x', '-', '-', 'x', 'x', '-', '-', 'x', '-', '-', '-', '-', 'x'},
                        {'x', '-', 'x', '-', '-', '-', '-', '-', 'x', 'x', 'x', '-', 'x', '-', 'x', '-', 'x', 'x', '-', 'x'},
                        {'x', '-', 'x', '-', '-', 'x', '-', '-', '-', '-', '-', '-', '-', '-', 'x', '-', '-', '-', '-', 'x'},
                        {'x', '-', 'x', '-', '-', 'x', '-', '-', '-', '-', 'x', '-', '-', '-', 'x', '-', 'x', 'x', '-', 'x'},
                        {'x', '-', 'x', '-', '-', 'x', '-', '-', 'x', '-', '-', 'x', 'x', '-', '-', '-', 'x', '-', '-', 'x'},
                        {'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x'},
                        };
        char [][] laberinto2 ={{'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x'},
                        {'x', '-', '-', '-', 'x', '-', '-', '-', '-', 'x', '-', '-', '-', 'x', '-', '-', 'x', '-', '-', 'x'},
                        {'-', '-', 'x', '-', '-', 'x', '-', '-', '-', 'x', 'x', 'x', 'x', '-', '-', 'x', '-', 'x', '-', 'x'},
                        {'x', '-', 'x', '-', 'x', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'x', '-', 'x', 'x', '-', 'x'},
                        {'x', '-', 'x', '-', '-', '-', '-', '-', 'x', '-', 'x', 'x', '-', '-', 'x', '-', '-', '-', 'x', 'x'},
                        {'x', '-', 'x', 'x', 'x', '-', '-', '-', '-', '-', 'x', '-', '-', '-', 'x', '-', '-', '-', '-', 'x'},
                        {'x', '-', 'x', '-', 'x', '-', '-', '-', '-', 'x', 'x', '-', '-', '-', 'x', '-', '-', 'x', 'x', 'x'},
                        {'x', '-', 'x', '-', 'x', 'x', '-', '-', '-', '-', 'x', 'x', '-', '-', 'x', '-', '-', '-', '-', 'x'},
                        {'x', '-', '-', '-', '-', 'x', '-', '-', '-', '-', 'x', '-', '-', '-', 'x', '-', 'x', 'x', 'x', 'x'},
                        {'x', '-', 'x', 'x', '-', '-', '-', '-', '-', '-', '-', '-', 'x', 'x', 'x', 'x', 'x', '-', 'x', 'x'},
                        {'x', '-', 'x', 'x', '-', 'x', '-', '-', 'x', '-', 'x', '-', '-', '-', '-', '-', 'x', 'x', 'x', 'x'},
                        {'x', '-', 'x', '-', 'x', '-', '-', '-', '-', '-', 'x', '-', '-', 'x', '-', '-', 'x', '-', '-', 'x'},
                        {'x', '-', 'x', '-', '-', 'x', '-', '-', '-', 'x', 'x', '-', '-', '-', 'x', '-', '-', 'x', 'x', 'x'},
                        {'x', '-', '-', '-', '-', '-', 'x', '-', '-', '-', 'x', '-', '-', '-', 'x', '-', '-', 'x', 'x', 'x'},
                        {'x', '-', '-', 'x', '-', '-', '-', 'x', '-', '-', 'x', 'x', '-', '-', 'x', '-', '-', 'x', '-', 'x'},
                        {'x', '-', 'x', '-', '-', '-', '-', '-', 'x', 'x', 'x', '-', 'x', '-', 'x', 'x', '-', 'x', '-', 'x'},
                        {'x', '-', 'x', '-', '-', 'x', '-', '-', '-', '-', '-', '-', '-', '-', 'x', '-', '-', '-', '-', '-'},
                        {'x', '-', 'x', '-', '-', 'x', '-', '-', '-', '-', 'x', '-', '-', '-', 'x', '-', 'x', 'x', '-', 'x'},
                        {'x', '-', 'x', '-', '-', 'x', '-', '-', 'x', '-', '-', 'x', 'x', '-', '-', '-', 'x', 'x', '-', 'x'},
                        {'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x'},
                        };
        char [][] laberinto3 ={{'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x'},
                        {'x', '-', '-', '-', 'x', '-', '-', '-', '-', 'x', '-', '-', '-', 'x', '-', '-', 'x', '-', '-', 'x'},
                        {'x', '-', 'x', '-', '-', 'x', '-', '-', '-', 'x', 'x', 'x', 'x', '-', '-', 'x', '-', 'x', '-', 'x'},
                        {'x', '-', 'x', '-', 'x', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'x', '-', 'x', 'x', '-', 'x'},
                        {'x', '-', 'x', '-', '-', '-', '-', '-', 'x', '-', 'x', 'x', '-', '-', 'x', '-', '-', '-', 'x', 'x'},
                        {'x', '-', 'x', 'x', 'x', '-', '-', '-', '-', '-', 'x', '-', '-', '-', 'x', '-', '-', '-', '-', 'x'},
                        {'x', '-', 'x', '-', 'x', '-', '-', '-', '-', 'x', 'x', '-', '-', '-', 'x', '-', '-', 'x', 'x', 'x'},
                        {'x', '-', 'x', '-', 'x', 'x', '-', '-', '-', '-', 'x', 'x', '-', '-', 'x', '-', '-', '-', '-', 'x'},
                        {'x', '-', '-', '-', 'x', 'x', '-', '-', '-', '-', 'x', '-', '-', '-', 'x', '-', 'x', 'x', 'x', 'x'},
                        {'x', '-', 'x', 'x', '-', '-', '-', '-', '-', '-', 'x', '-', 'x', 'x', 'x', 'x', 'x', '-', '-', '-'},
                        {'x', '-', 'x', 'x', '-', 'x', '-', '-', 'x', '-', 'x', '-', '-', '-', '-', '-', 'x', 'x', '-', 'x'},
                        {'x', '-', 'x', '-', 'x', '-', '-', '-', '-', '-', 'x', '-', '-', 'x', '-', '-', 'x', '-', '-', 'x'},
                        {'x', '-', 'x', '-', '-', 'x', '-', '-', '-', 'x', 'x', '-', 'x', '-', 'x', '-', '-', '-', 'x', 'x'},
                        {'x', '-', '-', '-', '-', '-', 'x', '-', '-', '-', 'x', '-', '-', '-', 'x', '-', '-', '-', 'x', 'x'},
                        {'x', '-', '-', 'x', '-', '-', '-', 'x', '-', '-', 'x', 'x', '-', '-', 'x', '-', '-', '-', '-', 'x'},
                        {'x', '-', 'x', '-', '-', '-', '-', '-', 'x', 'x', 'x', '-', 'x', '-', 'x', '-', 'x', 'x', '-', 'x'},
                        {'x', '-', 'x', '-', '-', 'x', '-', '-', '-', '-', '-', '-', '-', '-', 'x', '-', '-', '-', '-', 'x'},
                        {'x', '-', 'x', '-', '-', 'x', '-', '-', '-', '-', 'x', '-', '-', '-', 'x', '-', 'x', 'x', '-', 'x'},
                        {'-', '-', 'x', '-', '-', 'x', '-', '-', 'x', '-', '-', 'x', 'x', '-', '-', '-', 'x', '-', '-', 'x'},
                        {'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x'},
                        };
                       
                              
        Stack <Ubic> pila = new Stack <Ubic>();
        LabNodo[] laberintos = new LabNodo[3];
        laberintos[0] = new LabNodo (laberinto1,new Ubic(14,0),new Ubic (5,18));
        laberintos[1] = new LabNodo (laberinto2,new Ubic(2,0),new Ubic (16,18));
        laberintos[2] = new LabNodo (laberinto3,new Ubic(18,0),new Ubic (9,18));
        
        
        //lab1 inicio en (14,0) termina en (5,18)
        //lab2 inicio en (2,0) termina en (16,18) silo hace
        //lab3 inicio en (18,0) termina en (9,18); 
        
        
        
        for (int r=0;r<3;r++){
        int numero = 0;
        do{
            numero = (int)(Math.random()*3);
        }while(laberintos[numero].seUso==true);
       
        
        
       int f=0;
       int c=0;
       Ubic fin = new Ubic (0,0);
        if (numero==0){
        //PRIMER LABERINTOOOO       
        f = 14;
        c = 0;
        
        fin = new Ubic (5,18);
       }
       else if (numero==1){
        //SEGUNDOO LABERINTOOOO       
        f = 2;
        c = 0;
        
        fin = new Ubic (16,18);
       }
       else if (numero==2){
        //TERCEROOO LABERINTOOOO       
        f = 18;
        c = 0;
        
        fin = new Ubic (9,18);
       }
        
        do{
            if (laberintos[numero].laberinto[f][c+1]=='-'){
                laberintos[numero].laberinto[f][c]='*';
                pila.push(new Ubic (f,c));
                laberintos[numero].laberinto[f][++c]='R'; 
            }else if (laberintos[numero].laberinto[f+1][c]=='-'){
                laberintos[numero].laberinto[f][c]='*';
                pila.push(new Ubic (f,c));
                laberintos[numero].laberinto[++f][c]='R'; 

            }else if (laberintos[numero].laberinto[f][c-1]=='-'){
                laberintos[numero].laberinto[f][c]='*';
                pila.push(new Ubic (f,c));
                laberintos[numero].laberinto[f][--c]='R';

            }else if (laberintos[numero].laberinto[f-1][c]=='-'){
                laberintos[numero].laberinto[f][c]='*';
                pila.push(new Ubic (f,c));
                laberintos[numero].laberinto[--f][c]='R';

            }else{
                laberintos[numero].laberinto [f][c]='o';
                pila.pop();
                
                if (laberintos[numero].laberinto[f][c+1]=='*'){
                    laberintos[numero].laberinto[f][++c]='R';
                }else if (laberintos[numero].laberinto[f+1][c]=='*'){
                    laberintos[numero].laberinto[++f][c]='R'; 
                }else if (laberintos[numero].laberinto[f][c-1]=='*'){
                    laberintos[numero].laberinto[f][--c]='R'; 
                }else if (laberintos[numero].laberinto[f-1][c]=='*'){
                    laberintos[numero].laberinto[--f][c]='R';}
        }
        }while(pila.peek().getF()!=fin.getF() || pila.peek().getC()!=fin.getC());   
        laberintos[numero].seUso = true;
         
        
            //imprimir laberinto
        for (char[]y:laberintos[numero].laberinto){
            for (char z:y){
                System.out.print(z+ " ");    
            }
            System.out.println();
        }
        System.out.println();
        }     
            
      
    }
}